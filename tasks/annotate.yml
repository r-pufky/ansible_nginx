---
# yamllint disable rule:line-length
###############################################################################
# Annotate User Configuration.
###############################################################################
# Sanitize (standardize with default values if not set) NGINX configuration.
#
# A necessary evil given the limitations of argument_spec:
# * Strong validation and sanitization of user input.
# * Annotated variable providing context and rendering hints.
# * Logic updates centrally located in tasks.
# * Simplified role updates for variable changes.
# * All data touched by user is in a standard, expected format.
#
# Annotated Defaults (2.0):
# _{VAR}: dict - Annotated and sanitized default variable.
#   section: str - Section name.
#   key: str - Config file key.
#   raw: any - Raw value from user, defaults, or role defaults.
#   data: any - Processed raw value for use in rendering. Optional.
#   default: any - Role default (testing for changed defaults).
#   hint: str - Value rendering type hint (docstring types).
#   role_*: any - Role specific usage. Optional.
#   added: str - Release version variable added.
#       Special Case:
#         0.0.0: Unknown or since role inception.
#   sensitive: bool - True for PII/SPII data that should not be logged.
#   deprecated: bool - True if no longer used in current role release.
#   order: int - Order item should appear in templated files.
#
# Generates:
#   _nginx_ngx_map: list of dict - Annotated config map.
#
# Reference:
# * https://docs.ansible.com/ansible/latest/dev_guide/developing_program_flow_modules.html#argument-spec
# * https://github.com/ansible/ansible/issues/77159
# yamllint enable rule:line-length

- name: 'Annotate | sanitize & annotate service defaults'
  ansible.builtin.set_fact:
    _nginx_srv_packages: {
      section: '',
      key: '',
      raw: '{{ nginx_srv_packages }}',
      default: [],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _nginx_srv_restart_enable: {
      section: '',
      key: '',
      raw: '{{ nginx_srv_restart_enable }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _nginx_srv_user: {
      section: '',
      key: '',
      raw: '{{ nginx_srv_user }}',
      default: 'nginx',
      hint: 'str',
      added: '6.4.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _nginx_srv_group: {
      section: '',
      key: '',
      raw: '{{ nginx_srv_group }}',
      default: 'nginx',
      hint: 'str',
      added: '6.4.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _nginx_srv_create_user: {
      section: '',
      key: '',
      raw: '{{ nginx_srv_create_user }}',
      default: true,
      hint: 'bool',
      added: '6.4.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }

- name: 'Annotate | sanitize & annotate config defaults'
  ansible.builtin.set_fact:
    _nginx_cfg_basic_auth_enable: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_basic_auth_enable }}',
      default: false,
      role_dest: '{{ nginx_role_root ~ "/auth/" }}',
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _nginx_cfg_basic_auth_users: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_basic_auth_users }}',
      data: [],
      default: [],
      role_dest: '{{ nginx_role_root ~ "/auth/users" }}',
      hint: 'list of str',
      added: '0.0.0',
      sensitive: true,
      deprecated: false,
      order: 2,
    }
    _nginx_cfg_ca_dir: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_ca_dir }}',
      default: '',
      role_src: "{{ nginx_cfg_ca_dir | regex_replace('\\/$', '') ~ '/' }}",
      role_dest: '{{ nginx_role_root ~ "/ca" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _nginx_cfg_confd_dir: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_confd_dir }}',
      default: 'files/etc/conf.d',
      role_src: "{{ nginx_cfg_confd_dir | regex_replace('\\/$', '') ~ '/' }}",
      role_dest: '{{ nginx_role_root ~ "/conf.d" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _nginx_cfg_fastcgi_params_file: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_fastcgi_params_file }}',
      default: 'files/etc/fastcgi_params',
      role_src:
        "{{ nginx_cfg_fastcgi_params_file | regex_replace('\\/$', '') }}",
      role_dest: '{{ nginx_role_root ~ "/fastcgi_params" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _nginx_cfg_scgi_params_file: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_scgi_params_file }}',
      default: 'files/etc/scgi_params',
      role_src: "{{ nginx_cfg_scgi_params_file | regex_replace('\\/$', '') }}",
      role_dest: '{{ nginx_role_root ~ "/scgi_params" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _nginx_cfg_uwsgi_params_file: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_uwsgi_params_file }}',
      default: 'files/etc/uwsgi_params',
      role_src:
        "{{ nginx_cfg_uwsgi_params_file | regex_replace('\\/$', '') }}",
      role_dest: '{{ nginx_role_root ~ "/uwsgi_params" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _nginx_cfg_mime_types_file: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_mime_types_file }}',
      default: 'files/etc/mime.types',
      role_src: "{{ nginx_cfg_mime_types_file | regex_replace('\\/$', '') }}",
      role_dest: '{{ nginx_role_root ~ "/mime.types" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _nginx_cfg_nginx_conf_file: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_nginx_conf_file }}',
      default: 'files/etc/nginx.conf',
      role_src: "{{ nginx_cfg_nginx_conf_file | regex_replace('\\/$', '') }}",
      role_dest: '{{ nginx_role_root ~ "/nginx.conf" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _nginx_cfg_web_root_dir: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_web_root_dir }}',
      default: 'files/web_root',
      role_src:
        "{{ nginx_cfg_web_root_dir | regex_replace('\\/$', '') ~ '/' }}",
      role_dest: '{{ nginx_role_web_root }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _nginx_cfg_streamd_dir: {
      section: '',
      key: '',
      raw: '{{ nginx_cfg_streamd_dir }}',
      default: '',
      role_src:
        "{{ nginx_cfg_streamd_dir | regex_replace('\\/$', '') ~ '/' }}",
      role_dest: '{{ nginx_role_root ~ "/stream.d" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }

- name: 'Annotate | merge template nginx_cfg_basic_auth_users'
  ansible.builtin.set_fact:
    _nginx_cfg_basic_auth_users: '{{
        _nginx_cfg_basic_auth_users |
        combine({"data": _nginx_cfg_basic_auth_users.data | default([]) +
                [nginx_role_template_basic_auth | combine(item)]})
      }}'
  loop: '{{ _nginx_cfg_basic_auth_users.raw }}'
  loop_control:
    label: '{{ item.user }}'

- name: 'Annotate | generate config map'
  ansible.builtin.set_fact:
    _nginx_map: '{{
        hostvars[inventory_hostname] | dict2items |
        selectattr("key", "match", "_nginx_cfg_*")
      }}'
